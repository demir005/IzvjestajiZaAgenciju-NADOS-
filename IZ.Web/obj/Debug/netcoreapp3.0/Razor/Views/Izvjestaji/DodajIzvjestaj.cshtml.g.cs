#pragma checksum "C:\Users\Demir\Documents\Visual Studio 2019\Projects\IzvjestajiZaAgencijuFinal\IzvjestajiZaAgenciju\IZ.Web\Views\Izvjestaji\DodajIzvjestaj.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ded08c085e0ad20e23043ce9b192cfaf11113b73"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Izvjestaji_DodajIzvjestaj), @"mvc.1.0.view", @"/Views/Izvjestaji/DodajIzvjestaj.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Demir\Documents\Visual Studio 2019\Projects\IzvjestajiZaAgencijuFinal\IzvjestajiZaAgenciju\IZ.Web\Views\_ViewImports.cshtml"
using IZ.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Demir\Documents\Visual Studio 2019\Projects\IzvjestajiZaAgencijuFinal\IzvjestajiZaAgenciju\IZ.Web\Views\_ViewImports.cshtml"
using IZ.Web.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ded08c085e0ad20e23043ce9b192cfaf11113b73", @"/Views/Izvjestaji/DodajIzvjestaj.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"85e9aeacd323c5081a5904015868b23b92d25697", @"/Views/_ViewImports.cshtml")]
    public class Views_Izvjestaji_DodajIzvjestaj : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IZ.Model.VM.ListaSveVM>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "0", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("selekt-tip"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-control"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "C:\Users\Demir\Documents\Visual Studio 2019\Projects\IzvjestajiZaAgencijuFinal\IzvjestajiZaAgenciju\IZ.Web\Views\Izvjestaji\DodajIzvjestaj.cshtml"
  
    ViewData["Title"] = "Dodaj izvjestaj";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<style>
    #neuspjeh, #neuspjeh-XML-forme, #fajl-500 {
        display: none;
    }

    #XML-dump, #XML-dump2 {
        width: 100%;
        min-height: 400px;
    }

    #podaci-prikaz {
        display: none;
    }

    div.group-custom {
        margin-bottom: 5px;
    }

    .obavezno-polje {
        color: orangered
    }

    #datumi-validacija {
        color: orangered;
        font-size: small;
    }
</style>
");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ded08c085e0ad20e23043ce9b192cfaf11113b735430", async() => {
                WriteLiteral(@"

    <div class=""p-5 border rounded"">
        <h3 class=""toast-header"">Generisi izvjestaj </h3>      
        <div class=""form-group row"">
            <div class=""col-3"">
            </div>
            <div class=""col"">
                <div class=""col-4"">
                    <span id=""datumi-validacija""></span>
                </div>
            </div>
        </div>

        <div class=""form-group row"">
            <div class=""col-3"">
                <label for=""datum-od"" class=""col-form-label"">Datum od:<span class=""obavezno-polje"">*</span></label>
            </div>
            <div class=""col"">
                <div class=""col-4"">
                    <input id=""datum-od"" class=""form-control"" required />
                    <script>
                        $('#datum-od').datepicker({
                            uiLibrary: 'bootstrap4',
                            format: 'yyyy-mm-dd'
                        }).on('changeDate', function (ev) {
                            $(""select"")");
                WriteLiteral(@".trigger(""click"");
                        });
                    </script>
                </div>
            </div>
        </div>

        <div class=""form-group row"">
            <div class=""col-3"">
                <label for=""datum-do"" class=""col-form-label"">Datum do:<span class=""obavezno-polje"">*</span></label>
            </div>
            <div class=""col"">
                <div class=""col-4"">
                    <input id=""datum-do"" class=""form-control"" required />
                    <script>
                        $('#datum-do').datepicker({
                            uiLibrary: 'bootstrap4',
                            format: 'yyyy-mm-dd'
                        }).on('changeDate', function (ev) {
                            $(""select"").trigger(""click"");
                        });
                    </script>
                </div>
            </div>
        </div>

        <div class=""form-group row"">
            <div class=""col-3"">
                <label for=""dat");
                WriteLiteral(@"um-podnosenja"" class=""col-form-label"">Datum podnošenja:<span class=""obavezno-polje"">*</span></label>
            </div>
            <div class=""col"">
                <div class=""col-4"">
                    <input id=""datum-podnosenja"" class=""form-control"" required />
                    <script>
                        $('#datum-podnosenja').datepicker({
                            uiLibrary: 'bootstrap4',
                            format: 'yyyy-mm-dd'
                        }).on('changeDate', function (ev) {
                            $(""select"").trigger(""click"");
                        });
                    </script>
                </div>
            </div>
        </div>
        <!--------------------------->
        <div class=""form-group row"">
            <div class=""col-3"">
                <label for=""selekt-tip"" class=""col-form-label"">Tip izvještaja:<span class=""obavezno-polje"">*</span></label>
            </div>
            <div class=""col"">
                <div class=""c");
                WriteLiteral("ol-4\">\r\n                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ded08c085e0ad20e23043ce9b192cfaf11113b738988", async() => {
                    WriteLiteral("\r\n                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ded08c085e0ad20e23043ce9b192cfaf11113b739280", async() => {
                        WriteLiteral("Odaberite");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
#nullable restore
#line 110 "C:\Users\Demir\Documents\Visual Studio 2019\Projects\IzvjestajiZaAgencijuFinal\IzvjestajiZaAgenciju\IZ.Web\Views\Izvjestaji\DodajIzvjestaj.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = (new SelectList(ViewBag.SelektTip,"text1","text2"));

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                </div>
            </div>
        </div>
        <div class=""form-group row"">
            <div class=""col-3"">
                <label for=""selekt-izv"" class=""col-form-label"">Izvještaj:<span class=""obavezno-polje"">*</span></label>
            </div>
            <div class=""col"">
                <div class=""col-4"">
                    <select id=""selekt-izv"" class=""form-control"">
                    </select>
                </div>
            </div>
        </div>
");
                WriteLiteral(@"        <div class=""form-group row"">
            <div class=""col-3"">
                <label for=""fileUpload"" class=""col-form-label"">Odaberite fajl:<span class=""obavezno-polje"">*</span></label>
            </div>
            <div class=""col"">
                <div class=""col"" style=""display: -webkit-box;"">
                    <input type=""file"" id=""fileUpload"" accept="".xls,.xlsx"" value=""Odaberite fajl"" disabled />
                    <span id=""check-ok"" style=""color:limegreen; display:none"" class=""col-1"">&#10003;</span>
                </div>
            </div>
        </div>

        <hr>
");
                WriteLiteral(@"        <br /><br />
        <div id=""neuspjeh"" class=""row alert alert-danger alert-dismissible"">
            <button type=""button"" class=""close"" data-dismiss=""alert"">&times;</button>
            Odabrani dokument ne odgovara odabranom modelu. Pokušajte ponovo.
        </div>

        <div id=""fajl-500"" class=""row alert alert-danger alert-dismissible"">
            <button type=""button"" class=""close"" data-dismiss=""alert"">&times;</button>
            Već postoji fajl sa tim imenom.
        </div>

        <div id=""neuspjeh-XML-forme"" class=""row alert alert-danger alert-dismissible"">
            <button type=""button"" class=""close"" data-dismiss=""alert"">&times;</button>
            XML generisan iz priloženog dokumenta nije validan.
        </div>
        <div id=""podaci-prikaz"">
            <div class=""row"">
                <label>Svi podaci:</label>
                <br />
                <textarea id=""XML-dump"" readonly></textarea>
            </div>
            <div class=""row"">
          ");
                WriteLiteral("      <label>Podaci:</label>\r\n                <br />\r\n                <textarea id=\"XML-dump2\" readonly></textarea>\r\n            </div>\r\n        </div>\r\n    </div>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script type=""text/javascript"">
        $(document).ready(function () {
            var items = ""<option value='0'>Odaberite</option>"";
            $(""#selekt-izv"").html(items);
        });

        $(""#selekt-tip"").change(function () {
            var tipId = $(""#selekt-tip"").val();
            var url = ""/Izvjestaji/VratiIzvjestajePoTipu"";

            $.getJSON(url, { tipId: tipId }, function (data) {
                var item = """";
                item = '<option value=""0"">Odaberite</option>'
                $(""#selekt-izv"").empty();

                if (data != undefined) {
                    for (i = 0; i < data.length; i++) {
                        item += '<option value=""' + data[i].text1 + '"">' + data[i].text2 + '</option>'
                    }
                }
                else {
                    item = '<option value=""0"">Nema izvještaja</option>'
                }

                $(""#selekt-izv"").html(item);
            });
        });
    </script>

");
            }
            );
            WriteLiteral(@"
<script>
    var selectedFile, rowObject, objBaza;

    $(document).ready(function () {

        $(""#selekt-izv"").click(function () {

            if ($(this).val() == ""0"" || $(this).val() == null) {
                //if ($(""#datum-od"").val().trim().length == 0) {
                //    $(""#datum-od"").css(""border-color"", ""red"");
                //}
                //if ($(""#datum-do"").val().trim().length == 0) {
                //    $(""#datum-do"").css(""border-color"", ""red"");
                //}
                //if ($(""#datum-podnosenja"").val().trim().length == 0) {
                //    $(""#datum-podnosenja"").css(""border-color"", ""red"");
                //}

                $(""input:file"").prop(""disabled"", true);
                return;
            }
            // provjeri jel unio datume
            if ($(""#datum-od"").val().trim().length == 0 || $(""#datum-do"").val().trim().length == 0 || $(""#datum-podnosenja"").val().trim().length == 0) {
                $(""#datumi-validacija"").html(");
            WriteLiteral(@"'Datumi su obavezni');
                return;
            } else {
                $(""#datumi-validacija"").css(""display"", ""none"");
            }
            // provjeri jel unio datume KRAJ
            //else {
            //    if ($(""#datum-od"").val().trim().length == 0) {
            //        $(""#datum-od"").css(""border-color"", ""red"");
            //        $(""input:file"").prop(""disabled"", true);
            //        return;
            //    } else {
            //        $(""#datum-od"").css(""border-color"", ""#eee"");
            //    }
            //    if ($(""#datum-do"").val().trim().length == 0) {
            //        $(""#datum-do"").css(""border-color"", ""red"");
            //        $(""input:file"").prop(""disabled"", true);
            //        return;
            //    } else {
            //        $(""#datum-do"").css(""border-color"", ""#eee"");
            //    }
            //    if ($(""#datum-podnosenja"").val().trim().length == 0) {
            //        $(""#datum-podnosenja"").cs");
            WriteLiteral(@"s(""border-color"", ""red"");
            //        $(""input:file"").prop(""disabled"", true);
            //        return;
            //    } else {
            //        $(""#datum-podnosenja"").css(""border-color"", ""#eee"");
            //    }

            //}

            $(""input:file"").prop(""disabled"", false);

            objBaza = $.ajax({
                type: ""GET"",
                url: ""/Izvjestaji/VratiSemu/"",
                data: ""semaId="" + $(this).val(),
                async: false,
                contentType: ""application/json; charset=utf-8"",
                dataType: ""json"",
                success: function (sema) {

                }

            });

            objBaza = JSON.parse(objBaza.responseJSON);

        });

        document.getElementById(""fileUpload"").addEventListener(""change"", function (event) {
            $(""#loading-img"").css(""display"", ""block"");
            $(""#podaci-prikaz"").css(""display"", ""none"");
            $(""#fajl-500"").css(""display"", ""no");
            WriteLiteral(@"ne"");

            selectedFile = event.target.files[0];

            if (selectedFile) {
                var fileReader = new FileReader();

                fileReader.onload = function (event) {
                    var data = event.target.result;

                    var workbook = XLSX.read(data, {
                        type: ""binary""
                    });

                    if (compareObjects(objBaza, Glavna.VratiHeader(workbook))) {
                        $(""#check-ok"").css(""display"", ""inline"");
                        $(""#neuspjeh"").css(""display"", ""none"");
                        $(""#spasi-izvjestaj"").prop(""disabled"", false);

                        var sve = XLSX.utils.sheet_to_json(workbook.Sheets[workbook.SheetNames[0]], { header: 1, raw: false });

                        var JSONzaPoslat = Glavna.PrekiniJSONObjakatKodPraznogRedaNaDnu(sve.slice(Glavna.VratiPocetniRedHeadera(sve) + 1));

                        //var jsonPodaciBezHeadera = Glavna.VratiSamoPodatke(sve.sl");
            WriteLiteral(@"ice(Glavna.VratiPocetniRedHeadera(sve) + 1));
                        var jsonPodaciBezHeadera = Glavna.VratiSamoPodatke(sve);

                        var podaci = Glavna.Dio1PeriodSifra($(""#datum-od"").val(), $(""#datum-do"").val()) + Glavna.EXCELuXML2(sve.slice(Glavna.VratiPocetniRedHeadera(sve) + 1));
                        var podaciBezPrveDvijeKolone = Glavna.EXCELuXML2(sve.slice(Glavna.VratiPocetniRedHeadera(sve) + 1), 2); // ,2 naznacuje da se pocinje od kolone 2, po defaultu se pocinje od kolone 0

                        $(""#podaci-prikaz"").css(""display"", ""block"");
                        $(""#XML-dump"").html(Glavna.FormatirajXML(podaci));
                        $(""#XML-dump2"").html(Glavna.FormatirajXML(podaciBezPrveDvijeKolone));

                        var kkk = JSON.stringify(XLSX.utils.sheet_to_json(workbook.Sheets[workbook.SheetNames[0]], { raw: false }));

                        if (!!podaci) { // ako ne vrati null XML sema koju je vratio je ok
                            $(""#neus");
            WriteLiteral(@"pjeh-XML-forme"").css(""display"", ""none"");
                            // ------------------- dio za upload

                            if (window.FormData !== undefined) {

                                var formData = new FormData();
                                formData.append('file', $('#fileUpload')[0].files[0]);

                                $.ajax({
                                    url: ""/Izvjestaji/UploadFile/"",
                                    type: 'POST',
                                    data: formData,
                                    processData: false,
                                    contentType: false,
                                    success: function (result) {
                                        if (rez.status == 200) {
                                            $(""#fajl-500"").css(""display"", ""none"");
                                        }
                                    },
                                    error: function (rez) {
   ");
            WriteLiteral(@"                                     if (rez.status == 500) {
                                            $(""#fajl-500"").css(""display"", ""block"");
                                        }
                                    }
                                });

                            } else {
                                alert(""Preglednik nije kompatabilan za upload fajlova."");
                            }

                            // --------------------- dio za upload KRAJ
                            var n = $(""#fileUpload"").val().split('\\');
                            n = n[n.length - 1];

                            spasiPodatke = $.ajax({
                                type: ""POST"",
                                url: ""/Izvjestaji/SpasiPodatke/"",
                                data: ""semaId="" + $(""#selekt-izv"").val() + ""&datumOd="" + $(""#datum-od"").val() + ""&datumDo="" + $(""#datum-do"").val() + ""&datumPodnosenja="" + $('#datum-podnosenja').val() + ""&podaci="" + podaci + ""&po");
            WriteLiteral(@"daciBezPrveDvijeKolone="" + podaciBezPrveDvijeKolone + ""&jsonSamo="" + JSON.stringify(JSONzaPoslat) + ""&jsonPoseban="" + kkk + ""&jsonPodaciBezHeadera="" + jsonPodaciBezHeadera + ""&nazivFajla="" + n,
                                async: false,
                                success: function (sema) {

                                }
                            });
                        } else { // ako vrati null XML sema koju je generisao je losa
                            $(""#neuspjeh-XML-forme"").css(""display"", ""block"");
                        }

                    } else {
                        //var sVal = $(""select"").val();
                        //var dat1 = $(""#datum-od"").val();
                        //var dat2 = $(""#datum-Do"").val();

                        //document.getElementsByTagName(""form"")[0].reset();
                        $(""#fileUpload"").val("""");
                        //$(""select"").val(sVal);
                        $(""#neuspjeh"").css(""display"", ""block"");
     ");
            WriteLiteral(@"                   $(""#check-ok"").css(""display"", ""none"");
                        $(""#spasi-izvjestaj"").prop(""disabled"", true);
                    }

                    $(""#loading-img"").css(""display"", ""none"");
                };
                fileReader.readAsBinaryString(selectedFile);
            }
        });

        function compareObjects(object1, object2) {
            if (JSON.stringify(object1, null, 0) == JSON.stringify(object2, null, 0)) {
                return true;
            } else return false;
        }

    });

</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IZ.Model.VM.ListaSveVM> Html { get; private set; }
    }
}
#pragma warning restore 1591
